// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TermProjectV1.Models;

namespace TermProjectV1.Migrations
{
    [DbContext(typeof(RecommendContext))]
    [Migration("20211017235841_Secondary")]
    partial class Secondary
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TermProjectV1.Models.Allergy", b =>
                {
                    b.Property<int>("AllergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Allergen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Examples")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AllergyId");

                    b.ToTable("Allergies");

                    b.HasData(
                        new
                        {
                            AllergyId = 1,
                            Allergen = "None",
                            Examples = "Water"
                        },
                        new
                        {
                            AllergyId = 2,
                            Allergen = "Peanuts",
                            Examples = "Peanut Butter, Brittle"
                        },
                        new
                        {
                            AllergyId = 3,
                            Allergen = "Gluten",
                            Examples = "Bread, Beer"
                        });
                });

            modelBuilder.Entity("TermProjectV1.Models.Recommend", b =>
                {
                    b.Property<int>("RecommendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllergyId")
                        .HasColumnType("int");

                    b.Property<string>("Food")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("RecommendId");

                    b.HasIndex("AllergyId");

                    b.ToTable("Recommends");

                    b.HasData(
                        new
                        {
                            RecommendId = 1,
                            AllergyId = 1,
                            Food = "Hot Dish",
                            Name = "Johnathan Fischer",
                            Rating = 5
                        },
                        new
                        {
                            RecommendId = 2,
                            AllergyId = 1,
                            Food = "Vernor's Ginger Ale",
                            Name = "CadillacConvertable98",
                            Rating = 2
                        },
                        new
                        {
                            RecommendId = 3,
                            AllergyId = 2,
                            Food = "Mackinac Island Fudge",
                            Name = "Gerald",
                            Rating = 4
                        });
                });

            modelBuilder.Entity("TermProjectV1.Models.Recommend", b =>
                {
                    b.HasOne("TermProjectV1.Models.Allergy", "Allergy")
                        .WithMany()
                        .HasForeignKey("AllergyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
